on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      self-url:
        required: false
        type: string
      log-level:
        required: false
        type: string
        default: info
      no-cache:
        required: false
        type: boolean
        default: false
    secrets:
      DOCKER_REPOSITORY:
        required: true
      GOOGLE_PROJECT_ID:
        required: true
      WORKLOAD_IDENTITY_PROVIDER:
        required: true
      SERVICE_ACCOUNT_EMAIL:
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  deploy-to-cloud-run:
    name: ${{ inputs.name }} ‚Üí Cloud Run
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ${{ secrets.DOCKER_REPOSITORY }}/${{ inputs.name }}

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Authenticate with Google üîë
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: Authenticate with Docker üîë
        uses: docker/login-action@v2
        with:
          registry: europe-north1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Docker meta üè∑
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMAGE_NAME }}
          # flavor: latest=true
          tags: |
            type=sha,prefix={{branch}}-

      - name: Set up Docker Buildx üî®
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push to Artifact Registry üõ†
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: ${{ inputs.no-cache }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline

      - name: Deploy with Google Cloud Run üöÄ
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ inputs.name }}
          image: ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          region: europe-north1
          env_vars:
            LOG_LEVEL=${{ inputs.log-level }},SELF_URL=${{ inputs.self-url }}
